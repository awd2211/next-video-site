name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 代码质量检查
  code-quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Backend code quality
        run: |
          cd backend
          pip install black isort flake8
          echo "::group::Black"
          black --check app/ || echo "Black formatting issues found"
          echo "::endgroup::"
          echo "::group::isort"
          isort --check-only app/ || echo "Import sorting issues found"
          echo "::endgroup::"
          echo "::group::flake8"
          flake8 app/ --max-line-length=120 --extend-ignore=E203,W503 --count || echo "Linting issues found"
          echo "::endgroup::"
        continue-on-error: true
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Frontend code quality
        run: |
          cd frontend
          pnpm install --frozen-lockfile
          pnpm lint || echo "Frontend linting issues found"
        continue-on-error: true
      
      - name: Admin frontend code quality
        run: |
          cd admin-frontend
          pnpm install --frozen-lockfile
          pnpm lint || echo "Admin frontend linting issues found"
          pnpm type-check || echo "Type check issues found"
        continue-on-error: true

  # 快速测试 - 关键路径
  quick-tests:
    name: ⚡ Quick Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      # Backend 快速测试
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Backend quick tests
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
          pytest tests/test_schemas.py tests/test_validators.py -v
        continue-on-error: true
      
      # Frontend 快速测试
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Frontend quick tests
        run: |
          cd frontend
          pnpm install --frozen-lockfile
          pnpm vitest run src/utils/__tests__
        continue-on-error: true

  # 构建检查
  build-check:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Build frontend
        run: |
          cd frontend
          pnpm install --frozen-lockfile
          pnpm build
      
      - name: Build admin-frontend
        run: |
          cd admin-frontend
          pnpm install --frozen-lockfile
          pnpm build
      
      - name: Check build artifacts
        run: |
          ls -lh frontend/dist/
          ls -lh admin-frontend/dist/
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/dist/
            admin-frontend/dist/
          retention-days: 7

  # 安全扫描
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
      
      - name: Dependency review
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request'
        continue-on-error: true

  # 最终状态汇总
  status-check:
    name: ✅ Status Check
    runs-on: ubuntu-latest
    needs: [code-quality, quick-tests, build-check]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "# 🚀 CI/CD Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.code-quality.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Quick Tests | ${{ needs.quick-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Check | ${{ needs.build-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Project Stats" >> $GITHUB_STEP_SUMMARY
          echo "- Test Files: 30+ (Frontend) + 5 (Backend)" >> $GITHUB_STEP_SUMMARY
          echo "- Test Cases: 600+" >> $GITHUB_STEP_SUMMARY
          echo "- Code Coverage: ~30% (improving)" >> $GITHUB_STEP_SUMMARY
