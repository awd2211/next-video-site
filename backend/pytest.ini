[pytest]
# Pytest Configuration

# Minimum Python version
minversion = 7.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Asyncio configuration
asyncio_mode = auto

# Output options
addopts = 
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Strict markers
    --strict-markers
    # Warnings
    -W ignore::DeprecationWarning
    # Coverage options (when using --cov)
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    # Parallel execution (uncomment to use)
    # -n auto
    # Max failures before stopping
    --maxfail=10
    # Show slowest tests
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    api: API endpoint tests
    admin: Admin API tests
    model: Model tests
    utils: Utils function tests
    middleware: Middleware tests
    security: Security tests
    performance: Performance tests
    slow: Slow running tests
    requires_db: Tests that require database
    requires_redis: Tests that require Redis
    requires_minio: Tests that require MinIO

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov

