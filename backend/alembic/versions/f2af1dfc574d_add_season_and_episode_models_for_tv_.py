"""add season and episode models for tv series management

Revision ID: f2af1dfc574d
Revises: f461d69edd42
Create Date: 2025-10-19 11:00:22.594235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f2af1dfc574d'
down_revision: Union[str, None] = 'f461d69edd42'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create seasons table
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=False, comment='所属剧集ID'),
    sa.Column('season_number', sa.Integer(), nullable=False, comment='季数（第1季、第2季...）'),
    sa.Column('title', sa.String(length=255), nullable=False, comment="季标题，如'第一季：凛冬将至'"),
    sa.Column('description', sa.Text(), nullable=True, comment='季简介'),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='seasonstatus'), nullable=False, comment='发布状态'),
    sa.Column('release_date', sa.DateTime(timezone=True), nullable=True, comment='上线时间'),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='实际发布时间'),
    sa.Column('vip_required', sa.Boolean(), nullable=False, comment='是否需要VIP会员'),
    sa.Column('poster_url', sa.String(length=500), nullable=True, comment='季封面图URL'),
    sa.Column('backdrop_url', sa.String(length=500), nullable=True, comment='季背景图URL'),
    sa.Column('trailer_url', sa.String(length=1000), nullable=True, comment='季预告片URL'),
    sa.Column('total_episodes', sa.Integer(), nullable=False, comment='总集数（自动计算）'),
    sa.Column('total_duration', sa.Integer(), nullable=False, comment='总时长（分钟，自动计算）'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='季总观看量'),
    sa.Column('favorite_count', sa.Integer(), nullable=False, comment='季总收藏数'),
    sa.Column('average_rating', sa.Float(), nullable=False, comment='季平均评分'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='是否推荐'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='排序权重（数字越大越靠前）'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('series_id', 'season_number', name='uq_series_season_number')
    )
    op.create_index(op.f('ix_seasons_created_at'), 'seasons', ['created_at'], unique=False)
    op.create_index(op.f('ix_seasons_id'), 'seasons', ['id'], unique=False)
    op.create_index(op.f('ix_seasons_season_number'), 'seasons', ['season_number'], unique=False)
    op.create_index(op.f('ix_seasons_series_id'), 'seasons', ['series_id'], unique=False)
    op.create_index(op.f('ix_seasons_status'), 'seasons', ['status'], unique=False)
    op.create_index(op.f('ix_seasons_vip_required'), 'seasons', ['vip_required'], unique=False)
    op.create_table('episodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False, comment='所属季度ID'),
    sa.Column('video_id', sa.Integer(), nullable=False, comment='关联的视频文件ID'),
    sa.Column('episode_number', sa.Integer(), nullable=False, comment='集数（本季内的第几集，如第1集）'),
    sa.Column('title', sa.String(length=500), nullable=False, comment="单集标题，如'凛冬将至'"),
    sa.Column('description', sa.Text(), nullable=True, comment='单集简介'),
    sa.Column('intro_start', sa.Integer(), nullable=True, comment='片头开始时间（秒）'),
    sa.Column('intro_end', sa.Integer(), nullable=True, comment='片头结束时间（秒）'),
    sa.Column('credits_start', sa.Integer(), nullable=True, comment='片尾开始时间（秒），用于自动跳到下一集'),
    sa.Column('next_episode_preview_url', sa.String(length=1000), nullable=True, comment='下集预告视频URL'),
    sa.Column('preview_duration', sa.Integer(), nullable=True, comment='预告时长（秒）'),
    sa.Column('is_free', sa.Boolean(), nullable=False, comment="是否免费（用于'前N集免费'策略）"),
    sa.Column('vip_required', sa.Boolean(), nullable=False, comment='是否需要VIP会员'),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='episodestatus'), nullable=False, comment='发布状态'),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='实际发布时间'),
    sa.Column('release_date', sa.DateTime(timezone=True), nullable=True, comment='计划上线时间'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='观看量'),
    sa.Column('like_count', sa.Integer(), nullable=False, comment='点赞数'),
    sa.Column('comment_count', sa.Integer(), nullable=False, comment='评论数'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='排序权重（通常按episode_number排序）'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='是否推荐本集'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('season_id', 'episode_number', name='uq_season_episode_number')
    )
    op.create_index(op.f('ix_episodes_created_at'), 'episodes', ['created_at'], unique=False)
    op.create_index(op.f('ix_episodes_episode_number'), 'episodes', ['episode_number'], unique=False)
    op.create_index(op.f('ix_episodes_id'), 'episodes', ['id'], unique=False)
    op.create_index(op.f('ix_episodes_is_free'), 'episodes', ['is_free'], unique=False)
    op.create_index(op.f('ix_episodes_season_id'), 'episodes', ['season_id'], unique=False)
    op.create_index(op.f('ix_episodes_status'), 'episodes', ['status'], unique=False)
    op.create_index(op.f('ix_episodes_video_id'), 'episodes', ['video_id'], unique=True)
    op.create_index(op.f('ix_episodes_vip_required'), 'episodes', ['vip_required'], unique=False)

    # Add absolute_episode_number column to videos table
    op.add_column('videos', sa.Column('absolute_episode_number', sa.Integer(), nullable=True, comment='绝对集数（用于不分季的剧集，如第25集）。有 Season/Episode 架构的剧集不使用此字段。'))
    op.create_index(op.f('ix_videos_absolute_episode_number'), 'videos', ['absolute_episode_number'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop absolute_episode_number from videos table
    op.drop_index(op.f('ix_videos_absolute_episode_number'), table_name='videos')
    op.drop_column('videos', 'absolute_episode_number')

    # Drop episodes table
    op.drop_index(op.f('ix_episodes_vip_required'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_video_id'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_status'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_season_id'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_is_free'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_id'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_episode_number'), table_name='episodes')
    op.drop_index(op.f('ix_episodes_created_at'), table_name='episodes')
    op.drop_table('episodes')

    # Drop seasons table
    op.drop_index(op.f('ix_seasons_vip_required'), table_name='seasons')
    op.drop_index(op.f('ix_seasons_status'), table_name='seasons')
    op.drop_index(op.f('ix_seasons_series_id'), table_name='seasons')
    op.drop_index(op.f('ix_seasons_season_number'), table_name='seasons')
    op.drop_index(op.f('ix_seasons_id'), table_name='seasons')
    op.drop_index(op.f('ix_seasons_created_at'), table_name='seasons')
    op.drop_table('seasons')
    # ### end Alembic commands ###
