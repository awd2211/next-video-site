"""Add media resources table

Revision ID: cef137ed97dc
Revises: b3c92dbe71a7
Create Date: 2025-10-12 04:11:50.451488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cef137ed97dc'
down_revision: Union[str, None] = 'b3c92dbe71a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_notifications_created_at'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_is_read'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_type'), table_name='notifications')
    op.drop_index(op.f('idx_notifications_user_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_email_templates_slug'), table_name='email_templates')
    op.drop_table('email_templates')
    op.drop_table('email_configurations')
    op.alter_column('actors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('admin_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('admin_users', 'is_superadmin',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('admin_users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('announcements', 'title',
               existing_type=sa.VARCHAR(length=200),
               comment='中文标题',
               existing_nullable=False)
    op.alter_column('announcements', 'title_en',
               existing_type=sa.VARCHAR(length=200),
               comment='英文标题',
               existing_nullable=True)
    op.alter_column('announcements', 'content',
               existing_type=sa.TEXT(),
               comment='中文内容',
               existing_nullable=False)
    op.alter_column('announcements', 'content_en',
               existing_type=sa.TEXT(),
               comment='英文内容',
               existing_nullable=True)
    op.alter_column('announcements', 'type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('announcements', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('announcements', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('announcements', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('banners', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('banners', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='中文名称',
               existing_nullable=False)
    op.alter_column('categories', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment='英文名称',
               existing_nullable=True)
    op.alter_column('categories', 'description',
               existing_type=sa.TEXT(),
               comment='中文描述',
               existing_nullable=True)
    op.alter_column('categories', 'description_en',
               existing_type=sa.TEXT(),
               comment='英文描述',
               existing_nullable=True)
    op.alter_column('categories', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('categories', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('comments', 'like_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('comments', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_comments_parent_status_created'), table_name='comments')
    op.drop_index(op.f('idx_comments_user_created'), table_name='comments')
    op.alter_column('countries', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='中文名称',
               existing_nullable=False)
    op.alter_column('countries', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment='英文名称',
               existing_nullable=True)
    op.alter_column('countries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('directors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('favorite_folders', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('favorite_folders', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('favorite_folders', 'video_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('favorite_folders', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('favorites', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_favorites_user_created'), table_name='favorites')
    op.alter_column('operation_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ratings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_ratings_user_created'), table_name='ratings')
    op.drop_constraint(op.f('uq_ratings_user_video'), 'ratings', type_='unique')
    op.alter_column('recommendations', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('recommendations', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('reports', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('role_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('series', 'title',
               existing_type=sa.VARCHAR(length=255),
               comment='专辑标题',
               existing_nullable=False)
    op.alter_column('series', 'description',
               existing_type=sa.TEXT(),
               comment='专辑描述',
               existing_nullable=True)
    op.alter_column('series', 'cover_image',
               existing_type=sa.VARCHAR(length=500),
               comment='封面图',
               existing_nullable=True)
    op.alter_column('series', 'type',
               existing_type=postgresql.ENUM('series', 'collection', 'franchise', name='seriestype'),
               comment='专辑类型',
               existing_nullable=False,
               existing_server_default=sa.text("'series'::seriestype"))
    op.alter_column('series', 'status',
               existing_type=postgresql.ENUM('draft', 'published', 'archived', name='seriesstatus'),
               comment='发布状态',
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::seriesstatus"))
    op.alter_column('series', 'total_episodes',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='总集数',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'total_views',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='总播放量',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'total_favorites',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='总收藏数',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'display_order',
               existing_type=sa.INTEGER(),
               nullable=False,
               comment='显示顺序',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'is_featured',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               comment='是否推荐',
               existing_server_default=sa.text('false'))
    op.alter_column('series', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('series', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_series_is_featured'), table_name='series')
    op.drop_index(op.f('idx_series_status'), table_name='series')
    op.create_index(op.f('ix_series_created_at'), 'series', ['created_at'], unique=False)
    op.create_index(op.f('ix_series_display_order'), 'series', ['display_order'], unique=False)
    op.create_index(op.f('ix_series_id'), 'series', ['id'], unique=False)
    op.create_index(op.f('ix_series_is_featured'), 'series', ['is_featured'], unique=False)
    op.create_index(op.f('ix_series_status'), 'series', ['status'], unique=False)
    op.create_index(op.f('ix_series_title'), 'series', ['title'], unique=False)
    op.create_index(op.f('ix_series_type'), 'series', ['type'], unique=False)
    op.alter_column('series_videos', 'episode_number',
               existing_type=sa.INTEGER(),
               comment='集数/顺序',
               existing_nullable=True)
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='中文名称',
               existing_nullable=False)
    op.alter_column('tags', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment='英文名称',
               existing_nullable=True)
    op.alter_column('tags', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_user_comment_likes_comment'), table_name='user_comment_likes')
    op.drop_index(op.f('idx_user_comment_likes_user'), table_name='user_comment_likes')
    op.drop_constraint(op.f('uq_user_comment_likes'), 'user_comment_likes', type_='unique')
    op.create_index(op.f('ix_user_comment_likes_comment_id'), 'user_comment_likes', ['comment_id'], unique=False)
    op.create_index(op.f('ix_user_comment_likes_id'), 'user_comment_likes', ['id'], unique=False)
    op.create_index(op.f('ix_user_comment_likes_user_id'), 'user_comment_likes', ['user_id'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_vip',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('video_actors', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('video_actors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_video_actors_actor_video'), table_name='video_actors')
    op.alter_column('video_categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_video_categories_category_video'), table_name='video_categories')
    op.alter_column('video_directors', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('video_directors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_video_directors_director_video'), table_name='video_directors')
    op.alter_column('video_shares', 'shared_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('video_tags', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_video_tags_tag_video'), table_name='video_tags')
    op.alter_column('videos', 'av1_resolutions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False,
               existing_comment='AV1分辨率URL映射',
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('videos', 'is_av1_available',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否有AV1版本',
               existing_server_default=sa.text('false'))
    op.alter_column('videos', 'transcode_progress',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='转码进度 0-100')
    op.alter_column('videos', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'like_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'favorite_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'comment_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'average_rating',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('videos', 'rating_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'is_featured',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('videos', 'is_recommended',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('videos', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('videos', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_videos_country_year_status'), table_name='videos')
    op.drop_index(op.f('idx_videos_search_vector'), table_name='videos', postgresql_using='gin')
    op.drop_index(op.f('idx_videos_status_featured_order'), table_name='videos')
    op.drop_index(op.f('idx_videos_status_rating'), table_name='videos')
    op.drop_index(op.f('idx_videos_status_recommended_order'), table_name='videos')
    op.drop_index(op.f('idx_videos_status_view_count'), table_name='videos')
    op.alter_column('watch_history', 'watch_duration',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('watch_history', 'last_position',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('watch_history', 'is_completed',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('watch_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_watch_history_user_updated'), table_name='watch_history')
    op.drop_constraint(op.f('uq_watch_history_user_video'), 'watch_history', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_watch_history_user_video'), 'watch_history', ['user_id', 'video_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_watch_history_user_updated'), 'watch_history', ['user_id', sa.literal_column('updated_at DESC')], unique=False)
    op.alter_column('watch_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('watch_history', 'is_completed',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('watch_history', 'last_position',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('watch_history', 'watch_duration',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('idx_videos_status_view_count'), 'videos', ['status', sa.literal_column('view_count DESC')], unique=False)
    op.create_index(op.f('idx_videos_status_recommended_order'), 'videos', ['status', 'is_recommended', sa.literal_column('sort_order DESC')], unique=False)
    op.create_index(op.f('idx_videos_status_rating'), 'videos', ['status', sa.literal_column('average_rating DESC')], unique=False)
    op.create_index(op.f('idx_videos_status_featured_order'), 'videos', ['status', 'is_featured', sa.literal_column('sort_order DESC')], unique=False)
    op.create_index(op.f('idx_videos_search_vector'), 'videos', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_videos_country_year_status'), 'videos', ['country_id', 'release_year', 'status'], unique=False)
    op.alter_column('videos', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('videos', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'is_recommended',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('videos', 'is_featured',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('videos', 'rating_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'average_rating',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('videos', 'comment_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'favorite_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'like_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('videos', 'transcode_progress',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='转码进度 0-100')
    op.alter_column('videos', 'is_av1_available',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否有AV1版本',
               existing_server_default=sa.text('false'))
    op.alter_column('videos', 'av1_resolutions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               nullable=True,
               existing_comment='AV1分辨率URL映射',
               existing_server_default=sa.text("'{}'::jsonb"))
    op.create_index(op.f('idx_video_tags_tag_video'), 'video_tags', ['tag_id', 'video_id'], unique=False)
    op.alter_column('video_tags', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('video_shares', 'shared_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('idx_video_directors_director_video'), 'video_directors', ['director_id', 'video_id'], unique=False)
    op.alter_column('video_directors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('video_directors', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('idx_video_categories_category_video'), 'video_categories', ['category_id', 'video_id'], unique=False)
    op.alter_column('video_categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('idx_video_actors_actor_video'), 'video_actors', ['actor_id', 'video_id'], unique=False)
    op.alter_column('video_actors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('video_actors', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_vip',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index(op.f('ix_user_comment_likes_user_id'), table_name='user_comment_likes')
    op.drop_index(op.f('ix_user_comment_likes_id'), table_name='user_comment_likes')
    op.drop_index(op.f('ix_user_comment_likes_comment_id'), table_name='user_comment_likes')
    op.create_unique_constraint(op.f('uq_user_comment_likes'), 'user_comment_likes', ['user_id', 'comment_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_user_comment_likes_user'), 'user_comment_likes', ['user_id'], unique=False)
    op.create_index(op.f('idx_user_comment_likes_comment'), 'user_comment_likes', ['comment_id'], unique=False)
    op.alter_column('tags', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('tags', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='英文名称',
               existing_nullable=True)
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='中文名称',
               existing_nullable=False)
    op.alter_column('series_videos', 'episode_number',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='集数/顺序',
               existing_nullable=True)
    op.drop_index(op.f('ix_series_type'), table_name='series')
    op.drop_index(op.f('ix_series_title'), table_name='series')
    op.drop_index(op.f('ix_series_status'), table_name='series')
    op.drop_index(op.f('ix_series_is_featured'), table_name='series')
    op.drop_index(op.f('ix_series_id'), table_name='series')
    op.drop_index(op.f('ix_series_display_order'), table_name='series')
    op.drop_index(op.f('ix_series_created_at'), table_name='series')
    op.create_index(op.f('idx_series_status'), 'series', ['status'], unique=False)
    op.create_index(op.f('idx_series_is_featured'), 'series', ['is_featured'], unique=False)
    op.alter_column('series', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('series', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('series', 'is_featured',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               comment=None,
               existing_comment='是否推荐',
               existing_server_default=sa.text('false'))
    op.alter_column('series', 'display_order',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='显示顺序',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'total_favorites',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='总收藏数',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'total_views',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='总播放量',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'total_episodes',
               existing_type=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='总集数',
               existing_server_default=sa.text('0'))
    op.alter_column('series', 'status',
               existing_type=postgresql.ENUM('draft', 'published', 'archived', name='seriesstatus'),
               comment=None,
               existing_comment='发布状态',
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::seriesstatus"))
    op.alter_column('series', 'type',
               existing_type=postgresql.ENUM('series', 'collection', 'franchise', name='seriestype'),
               comment=None,
               existing_comment='专辑类型',
               existing_nullable=False,
               existing_server_default=sa.text("'series'::seriestype"))
    op.alter_column('series', 'cover_image',
               existing_type=sa.VARCHAR(length=500),
               comment=None,
               existing_comment='封面图',
               existing_nullable=True)
    op.alter_column('series', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='专辑描述',
               existing_nullable=True)
    op.alter_column('series', 'title',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='专辑标题',
               existing_nullable=False)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('role_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('reports', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('recommendations', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('recommendations', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint(op.f('uq_ratings_user_video'), 'ratings', ['user_id', 'video_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_ratings_user_created'), 'ratings', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.alter_column('ratings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('operation_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('idx_favorites_user_created'), 'favorites', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.alter_column('favorites', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('favorite_folders', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('favorite_folders', 'video_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('favorite_folders', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('favorite_folders', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('directors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('countries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('countries', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='英文名称',
               existing_nullable=True)
    op.alter_column('countries', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='中文名称',
               existing_nullable=False)
    op.create_index(op.f('idx_comments_user_created'), 'comments', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_comments_parent_status_created'), 'comments', ['parent_id', 'status', sa.literal_column('created_at DESC')], unique=False)
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('comments', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('comments', 'like_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('categories', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('categories', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('categories', 'description_en',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='英文描述',
               existing_nullable=True)
    op.alter_column('categories', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='中文描述',
               existing_nullable=True)
    op.alter_column('categories', 'name_en',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='英文名称',
               existing_nullable=True)
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='中文名称',
               existing_nullable=False)
    op.alter_column('banners', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('banners', 'sort_order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('announcements', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('announcements', 'is_pinned',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('announcements', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('announcements', 'type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('announcements', 'content_en',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='英文内容',
               existing_nullable=True)
    op.alter_column('announcements', 'content',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='中文内容',
               existing_nullable=False)
    op.alter_column('announcements', 'title_en',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='英文标题',
               existing_nullable=True)
    op.alter_column('announcements', 'title',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='中文标题',
               existing_nullable=False)
    op.alter_column('admin_users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('admin_users', 'is_superadmin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('admin_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('actors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_table('email_configurations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('smtp_host', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('smtp_username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_use_tls', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('smtp_use_ssl', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('mailgun_api_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_base_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('from_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('from_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('email_configurations_pkey'))
    )
    op.create_table('email_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('html_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('text_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('email_templates_pkey')),
    sa.UniqueConstraint('slug', name=op.f('email_templates_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_email_templates_slug'), 'email_templates', ['slug'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='通知类型: comment_reply, video_published, system_announcement, etc.'),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='通知标题'),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False, comment='通知内容'),
    sa.Column('related_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='关联对象类型: video, comment, user, etc.'),
    sa.Column('related_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='关联对象ID'),
    sa.Column('link', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='跳转链接'),
    sa.Column('is_read', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否已读'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='阅读时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.create_index(op.f('idx_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_index(op.f('idx_notifications_type'), 'notifications', ['type'], unique=False)
    op.create_index(op.f('idx_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('idx_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    # ### end Alembic commands ###
