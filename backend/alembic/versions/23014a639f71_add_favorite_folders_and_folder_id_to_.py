"""add favorite folders and folder_id to favorites

Revision ID: 23014a639f71
Revises: add_subtitles_20251010
Create Date: 2025-10-10 07:46:49.825055

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23014a639f71'
down_revision: Union[str, None] = 'add_subtitles_20251010'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorite_folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('video_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_favorite_folders_id'), 'favorite_folders', ['id'], unique=False)
    op.create_index(op.f('ix_favorite_folders_user_id'), 'favorite_folders', ['user_id'], unique=False)
    op.drop_index('idx_subtitles_language', table_name='subtitles')
    op.drop_index('idx_subtitles_video_id', table_name='subtitles')
    op.drop_table('subtitles')
    op.drop_index('idx_notifications_created_at', table_name='notifications')
    op.drop_index('idx_notifications_is_read', table_name='notifications')
    op.drop_index('idx_notifications_type', table_name='notifications')
    op.drop_index('idx_notifications_user_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('email_configurations')
    op.drop_table('email_templates')
    op.add_column('favorites', sa.Column('folder_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_favorites_folder_id'), 'favorites', ['folder_id'], unique=False)
    op.create_foreign_key(None, 'favorites', 'favorite_folders', ['folder_id'], ['id'], ondelete='SET NULL')
    op.alter_column('videos', 'av1_resolutions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='AV1分辨率URL映射',
               existing_comment='AV1分辨率URL映射: {"1080p": "url", ...}',
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('videos', 'is_av1_available',
               existing_type=sa.BOOLEAN(),
               comment='是否有AV1版本',
               existing_comment='是否有AV1版本可用',
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('videos', 'h264_file_size',
               existing_type=sa.BIGINT(),
               comment='H.264文件大小(对比用)',
               existing_comment='H.264文件总大小(字节),用于对比',
               existing_nullable=True)
    op.drop_index('idx_videos_av1_available', table_name='videos')
    op.drop_index('idx_videos_transcode_status', table_name='videos')
    op.create_index(op.f('ix_videos_is_av1_available'), 'videos', ['is_av1_available'], unique=False)
    op.create_index(op.f('ix_videos_transcode_status'), 'videos', ['transcode_status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_videos_transcode_status'), table_name='videos')
    op.drop_index(op.f('ix_videos_is_av1_available'), table_name='videos')
    op.create_index('idx_videos_transcode_status', 'videos', ['transcode_status'], unique=False)
    op.create_index('idx_videos_av1_available', 'videos', ['is_av1_available'], unique=False)
    op.alter_column('videos', 'h264_file_size',
               existing_type=sa.BIGINT(),
               comment='H.264文件总大小(字节),用于对比',
               existing_comment='H.264文件大小(对比用)',
               existing_nullable=True)
    op.alter_column('videos', 'is_av1_available',
               existing_type=sa.BOOLEAN(),
               comment='是否有AV1版本可用',
               existing_comment='是否有AV1版本',
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('videos', 'av1_resolutions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='AV1分辨率URL映射: {"1080p": "url", ...}',
               existing_comment='AV1分辨率URL映射',
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.drop_constraint(None, 'favorites', type_='foreignkey')
    op.drop_index(op.f('ix_favorites_folder_id'), table_name='favorites')
    op.drop_column('favorites', 'folder_id')
    op.create_table('email_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('html_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('text_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='email_templates_pkey'),
    sa.UniqueConstraint('slug', name='email_templates_slug_key')
    )
    op.create_table('email_configurations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('smtp_host', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('smtp_username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_use_tls', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('smtp_use_ssl', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('mailgun_api_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_base_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('from_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('from_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='email_configurations_pkey')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='通知类型: comment_reply, video_published, system_announcement, etc.'),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='通知标题'),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False, comment='通知内容'),
    sa.Column('related_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='关联对象类型: video, comment, user, etc.'),
    sa.Column('related_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='关联对象ID'),
    sa.Column('link', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='跳转链接'),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否已读'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='阅读时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_notifications_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('idx_notifications_user_id', 'notifications', ['user_id'], unique=False)
    op.create_index('idx_notifications_type', 'notifications', ['type'], unique=False)
    op.create_index('idx_notifications_is_read', 'notifications', ['is_read'], unique=False)
    op.create_index('idx_notifications_created_at', 'notifications', ['created_at'], unique=False)
    op.create_table('subtitles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('language', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='语言代码 (zh-CN, en-US, ja, ko, etc.)'),
    sa.Column('language_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='语言名称 (简体中文, English, etc.)'),
    sa.Column('file_url', sa.VARCHAR(length=1000), autoincrement=False, nullable=False, comment='字幕文件URL'),
    sa.Column('format', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='字幕格式 (srt, vtt, ass)'),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否默认字幕'),
    sa.Column('is_auto_generated', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否AI自动生成'),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True, comment='排序顺序'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name='fk_subtitles_video_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subtitles_pkey'),
    sa.UniqueConstraint('video_id', 'language', name='uq_video_language')
    )
    op.create_index('idx_subtitles_video_id', 'subtitles', ['video_id'], unique=False)
    op.create_index('idx_subtitles_language', 'subtitles', ['language'], unique=False)
    op.drop_index(op.f('ix_favorite_folders_user_id'), table_name='favorite_folders')
    op.drop_index(op.f('ix_favorite_folders_id'), table_name='favorite_folders')
    op.drop_table('favorite_folders')
    # ### end Alembic commands ###
