"""add payment and subscription system tables

Revision ID: 67b49f079f01
Revises: f0e62db97990
Create Date: 2025-10-19 07:16:18.496208

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '67b49f079f01'
down_revision: Union[str, None] = 'f0e62db97990'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coupons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False, comment='优惠券代码'),
    sa.Column('discount_type', sa.Enum('PERCENTAGE', 'FIXED_AMOUNT', 'FREE_TRIAL', name='discounttype'), nullable=False, comment='折扣类型'),
    sa.Column('discount_value', sa.Numeric(precision=10, scale=2), nullable=False, comment='折扣值'),
    sa.Column('max_discount_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='最大折扣金额'),
    sa.Column('usage_limit', sa.Integer(), nullable=True, comment='总使用次数限制'),
    sa.Column('usage_count', sa.Integer(), nullable=False, comment='已使用次数'),
    sa.Column('usage_limit_per_user', sa.Integer(), nullable=False, comment='每个用户使用次数限制'),
    sa.Column('minimum_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='最低消费金额'),
    sa.Column('applicable_plans', sa.Text(), nullable=True, comment='适用套餐ID列表 JSON'),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=False, comment='有效期开始'),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True, comment='有效期结束'),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'DISABLED', name='couponstatus'), nullable=False, comment='状态'),
    sa.Column('is_first_purchase_only', sa.Boolean(), nullable=False, comment='是否仅限首次购买'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建者ID (admin)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coupons_code'), 'coupons', ['code'], unique=True)
    op.create_index(op.f('ix_coupons_id'), 'coupons', ['id'], unique=False)
    op.create_index(op.f('ix_coupons_status'), 'coupons', ['status'], unique=False)
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='套餐名称'),
    sa.Column('name_en', sa.String(length=100), nullable=True, comment='英文名称'),
    sa.Column('name_zh', sa.String(length=100), nullable=True, comment='中文名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='套餐描述'),
    sa.Column('description_en', sa.Text(), nullable=True, comment='英文描述'),
    sa.Column('description_zh', sa.Text(), nullable=True, comment='中文描述'),
    sa.Column('billing_period', sa.Enum('MONTHLY', 'QUARTERLY', 'YEARLY', 'LIFETIME', name='billingperiod'), nullable=False, comment='计费周期'),
    sa.Column('price_usd', sa.Numeric(precision=10, scale=2), nullable=False, comment='美元价格'),
    sa.Column('price_cny', sa.Numeric(precision=10, scale=2), nullable=False, comment='人民币价格'),
    sa.Column('price_eur', sa.Numeric(precision=10, scale=2), nullable=True, comment='欧元价格'),
    sa.Column('trial_days', sa.Integer(), nullable=False, comment='试用天数'),
    sa.Column('features', sa.Text(), nullable=True, comment='功能列表 JSON'),
    sa.Column('max_video_quality', sa.String(length=20), nullable=False, comment='最高视频质量'),
    sa.Column('max_concurrent_streams', sa.Integer(), nullable=False, comment='最大并发播放数'),
    sa.Column('allow_downloads', sa.Boolean(), nullable=False, comment='是否允许下载'),
    sa.Column('ad_free', sa.Boolean(), nullable=False, comment='是否无广告'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否启用'),
    sa.Column('is_popular', sa.Boolean(), nullable=False, comment='是否热门推荐'),
    sa.Column('display_order', sa.Integer(), nullable=False, comment='显示顺序'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_plans_id'), 'subscription_plans', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True, comment='关联支付'),
    sa.Column('invoice_number', sa.String(length=100), nullable=False, comment='发票编号'),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'PAID', 'VOID', name='invoicestatus'), nullable=False, comment='发票状态'),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False, comment='小计'),
    sa.Column('tax', sa.Numeric(precision=10, scale=2), nullable=False, comment='税费'),
    sa.Column('discount', sa.Numeric(precision=10, scale=2), nullable=False, comment='折扣'),
    sa.Column('total', sa.Numeric(precision=10, scale=2), nullable=False, comment='总计'),
    sa.Column('currency', sa.String(length=3), nullable=False, comment='货币'),
    sa.Column('billing_name', sa.String(length=200), nullable=False, comment='账单名称'),
    sa.Column('billing_email', sa.String(length=255), nullable=False, comment='账单邮箱'),
    sa.Column('billing_address', sa.Text(), nullable=True, comment='账单地址'),
    sa.Column('tax_id', sa.String(length=100), nullable=True, comment='税号'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('items', sa.Text(), nullable=True, comment='项目列表 JSON'),
    sa.Column('pdf_url', sa.String(length=500), nullable=True, comment='PDF URL'),
    sa.Column('issue_date', sa.DateTime(timezone=True), nullable=False, comment='开具日期'),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True, comment='到期日期'),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True, comment='支付时间'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_index(op.f('ix_invoices_invoice_number'), 'invoices', ['invoice_number'], unique=True)
    op.create_index(op.f('ix_invoices_payment_id'), 'invoices', ['payment_id'], unique=False)
    op.create_index(op.f('ix_invoices_status'), 'invoices', ['status'], unique=False)
    op.create_index(op.f('ix_invoices_user_id'), 'invoices', ['user_id'], unique=False)
    op.create_table('payment_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.Enum('STRIPE', 'PAYPAL', 'ALIPAY', name='paymentprovider'), nullable=False, comment='支付提供商'),
    sa.Column('provider_payment_method_id', sa.String(length=255), nullable=False, comment='第三方支付方式ID'),
    sa.Column('type', sa.String(length=50), nullable=False, comment='类型: card, paypal, alipay'),
    sa.Column('card_brand', sa.String(length=50), nullable=True, comment='卡品牌: visa, mastercard, etc.'),
    sa.Column('card_last4', sa.String(length=4), nullable=True, comment='卡号后4位'),
    sa.Column('card_exp_month', sa.Integer(), nullable=True, comment='过期月份'),
    sa.Column('card_exp_year', sa.Integer(), nullable=True, comment='过期年份'),
    sa.Column('is_default', sa.Boolean(), nullable=False, comment='是否为默认支付方式'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否启用'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_methods_id'), 'payment_methods', ['id'], unique=False)
    op.create_index(op.f('ix_payment_methods_user_id'), 'payment_methods', ['user_id'], unique=False)
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'TRIALING', 'PAST_DUE', 'CANCELED', 'EXPIRED', 'INCOMPLETE', name='subscriptionstatus'), nullable=False, comment='订阅状态'),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False, comment='开始时间'),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False, comment='结束时间'),
    sa.Column('trial_end_date', sa.DateTime(timezone=True), nullable=True, comment='试用结束时间'),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True, comment='取消时间'),
    sa.Column('auto_renew', sa.Boolean(), nullable=False, comment='是否自动续费'),
    sa.Column('renew_at', sa.DateTime(timezone=True), nullable=True, comment='下次续费时间'),
    sa.Column('payment_method_id', sa.Integer(), nullable=True, comment='默认支付方式'),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True, comment='Stripe 订阅ID'),
    sa.Column('paypal_subscription_id', sa.String(length=255), nullable=True, comment='PayPal 订阅ID'),
    sa.Column('coupon_id', sa.Integer(), nullable=True, comment='使用的优惠券'),
    sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='折扣金额'),
    sa.Column('extra_metadata', sa.Text(), nullable=True, comment='额外元数据 JSON'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupons.id'], ),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paypal_subscription_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index(op.f('ix_user_subscriptions_id'), 'user_subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_user_subscriptions_status'), 'user_subscriptions', ['status'], unique=False)
    op.create_index(op.f('ix_user_subscriptions_user_id'), 'user_subscriptions', ['user_id'], unique=False)
    # video_shares table removed - not part of payment system
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True, comment='关联订阅'),
    sa.Column('provider', sa.Enum('STRIPE', 'PAYPAL', 'ALIPAY', name='paymentprovider'), nullable=False, comment='支付提供商'),
    sa.Column('provider_payment_id', sa.String(length=255), nullable=False, comment='第三方支付ID'),
    sa.Column('provider_customer_id', sa.String(length=255), nullable=True, comment='第三方客户ID'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='支付金额'),
    sa.Column('currency', sa.Enum('USD', 'CNY', 'EUR', 'GBP', 'JPY', name='currency'), nullable=False, comment='货币类型'),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'SUCCEEDED', 'FAILED', 'CANCELED', 'REFUNDED', 'PARTIALLY_REFUNDED', name='paymentstatus'), nullable=False, comment='支付状态'),
    sa.Column('payment_type', sa.Enum('SUBSCRIPTION', 'RENEWAL', 'UPGRADE', 'ONE_TIME', name='paymenttype'), nullable=False, comment='支付类型'),
    sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='退款金额'),
    sa.Column('refund_reason', sa.Text(), nullable=True, comment='退款原因'),
    sa.Column('refunded_at', sa.DateTime(timezone=True), nullable=True, comment='退款时间'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='支付描述'),
    sa.Column('receipt_url', sa.String(length=500), nullable=True, comment='收据URL'),
    sa.Column('invoice_id', sa.Integer(), nullable=True, comment='发票ID'),
    sa.Column('failure_code', sa.String(length=100), nullable=True, comment='失败代码'),
    sa.Column('failure_message', sa.Text(), nullable=True, comment='失败消息'),
    sa.Column('extra_metadata', sa.Text(), nullable=True, comment='额外元数据 JSON'),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True, comment='支付完成时间'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['user_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_payment_id')
    )
    op.create_index(op.f('ix_payments_created_at'), 'payments', ['created_at'], unique=False)
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_provider'), 'payments', ['provider'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_index(op.f('ix_payments_subscription_id'), 'payments', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.drop_index(op.f('ix_sentry_config_id'), table_name='sentry_config')
    op.drop_table('sentry_config')
    op.drop_table('email_templates')
    op.drop_table('email_configurations')
    op.drop_index(op.f('ix_upload_sessions_id'), table_name='upload_sessions')
    op.drop_index(op.f('ix_upload_sessions_upload_id'), table_name='upload_sessions')
    op.drop_table('upload_sessions')
    op.drop_index(op.f('ix_upload_statistics_id'), table_name='upload_statistics')
    op.drop_index(op.f('ix_upload_statistics_upload_id'), table_name='upload_statistics')
    op.drop_table('upload_statistics')
    op.drop_index(op.f('ix_admin_notifications_admin_user_id'), table_name='admin_notifications')
    op.drop_index(op.f('ix_admin_notifications_created_at'), table_name='admin_notifications')
    op.drop_index(op.f('ix_admin_notifications_is_read'), table_name='admin_notifications')
    op.drop_index(op.f('ix_admin_notifications_type'), table_name='admin_notifications')
    op.drop_table('admin_notifications')
    op.alter_column('ai_performance_metrics', 'total_requests',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'successful_requests',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'failed_requests',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'avg_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'min_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'max_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'p50_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'p95_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'p99_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'total_tokens',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'avg_tokens_per_request',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'avg_cost_per_request',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ai_performance_metrics', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_ai_performance_metrics_id'), 'ai_performance_metrics', ['id'], unique=False)
    op.alter_column('ai_quotas', 'quota_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('ai_quotas', 'daily_requests_used',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_quotas', 'daily_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_quotas', 'daily_cost_used',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_quotas', 'monthly_requests_used',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_quotas', 'monthly_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_quotas', 'monthly_cost_used',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_quotas', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('ai_quotas', 'last_daily_reset',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ai_quotas', 'last_monthly_reset',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ai_quotas', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ai_quotas', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_ai_quotas_id'), 'ai_quotas', ['id'], unique=False)
    op.alter_column('ai_request_logs', 'request_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('ai_request_logs', 'prompt_tokens',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_request_logs', 'completion_tokens',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_request_logs', 'total_tokens',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_request_logs', 'response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_request_logs', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('ai_request_logs', 'estimated_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('ai_request_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_ai_request_logs_id'), 'ai_request_logs', ['id'], unique=False)
    op.alter_column('ai_templates', 'usage_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ai_templates', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('ai_templates', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('ai_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ai_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_ai_templates_id'), 'ai_templates', ['id'], unique=False)
    op.alter_column('media', 'is_folder',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否为文件夹',
               existing_server_default=sa.text('false'))
    op.alter_column('media', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='查看次数',
               existing_server_default=sa.text('0'))
    op.alter_column('media', 'download_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='下载次数',
               existing_server_default=sa.text('0'))
    op.alter_column('media', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='更新时间')
    op.alter_column('media', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否已删除',
               existing_server_default=sa.text('false'))
    op.alter_column('media_shares', 'allow_download',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否允许下载')
    op.alter_column('media_shares', 'download_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='已下载次数')
    op.alter_column('media_shares', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='已访问次数')
    op.alter_column('media_shares', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_comment='是否启用')
    op.alter_column('media_shares', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='创建时间')
    op.alter_column('media_shares', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='更新时间')
    op.alter_column('media_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_comment='创建时间')
    op.alter_column('schedule_templates', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('schedule_templates', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('media_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='创建时间')
    op.alter_column('media_shares', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('media_shares', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='创建时间')
    op.alter_column('media_shares', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否启用')
    op.alter_column('media_shares', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='已访问次数')
    op.alter_column('media_shares', 'download_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='已下载次数')
    op.alter_column('media_shares', 'allow_download',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否允许下载')
    op.alter_column('media', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否已删除',
               existing_server_default=sa.text('false'))
    op.alter_column('media', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('media', 'download_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='下载次数',
               existing_server_default=sa.text('0'))
    op.alter_column('media', 'view_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='查看次数',
               existing_server_default=sa.text('0'))
    op.alter_column('media', 'is_folder',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_comment='是否为文件夹',
               existing_server_default=sa.text('false'))
    op.drop_index(op.f('ix_ai_templates_id'), table_name='ai_templates')
    op.alter_column('ai_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_templates', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('ai_templates', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('ai_templates', 'usage_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_ai_request_logs_id'), table_name='ai_request_logs')
    op.alter_column('ai_request_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_request_logs', 'estimated_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_request_logs', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('ai_request_logs', 'response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_request_logs', 'total_tokens',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_request_logs', 'completion_tokens',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_request_logs', 'prompt_tokens',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_request_logs', 'request_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_index(op.f('ix_ai_quotas_id'), table_name='ai_quotas')
    op.alter_column('ai_quotas', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_quotas', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_quotas', 'last_monthly_reset',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_quotas', 'last_daily_reset',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_quotas', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('ai_quotas', 'monthly_cost_used',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_quotas', 'monthly_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_quotas', 'monthly_requests_used',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_quotas', 'daily_cost_used',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_quotas', 'daily_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_quotas', 'daily_requests_used',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_quotas', 'quota_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_index(op.f('ix_ai_performance_metrics_id'), table_name='ai_performance_metrics')
    op.alter_column('ai_performance_metrics', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'avg_cost_per_request',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'avg_tokens_per_request',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'total_tokens',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'p99_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'p95_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'p50_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'max_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'min_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'avg_response_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'failed_requests',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'successful_requests',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ai_performance_metrics', 'total_requests',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('admin_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('admin_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), server_default=sa.text("'info'::character varying"), autoincrement=False, nullable=False),
    sa.Column('related_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('related_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_user_id'], ['admin_users.id'], name=op.f('admin_notifications_admin_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('admin_notifications_pkey'))
    )
    op.create_index(op.f('ix_admin_notifications_type'), 'admin_notifications', ['type'], unique=False)
    op.create_index(op.f('ix_admin_notifications_is_read'), 'admin_notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_admin_notifications_created_at'), 'admin_notifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_admin_notifications_admin_user_id'), 'admin_notifications', ['admin_user_id'], unique=False)
    op.create_table('upload_statistics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False, comment='上传会话ID'),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='文件名'),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=False, comment='文件大小（字节）'),
    sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='MIME 类型'),
    sa.Column('upload_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='上传类型 (video/poster/backdrop)'),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='上传者ID'),
    sa.Column('total_chunks', sa.INTEGER(), autoincrement=False, nullable=True, comment='总分片数'),
    sa.Column('uploaded_chunks', sa.INTEGER(), autoincrement=False, nullable=True, comment='已上传分片数'),
    sa.Column('duration_seconds', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='上传耗时（秒）'),
    sa.Column('upload_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='平均上传速度（字节/秒）'),
    sa.Column('object_name', sa.VARCHAR(length=512), autoincrement=False, nullable=True, comment='MinIO 对象名称'),
    sa.Column('minio_upload_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='MinIO multipart upload ID'),
    sa.Column('is_success', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否成功'),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True, comment='错误信息'),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True, comment='上传者 IP 地址'),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='开始时间'),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='完成时间'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='记录创建时间'),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.id'], name=op.f('upload_statistics_admin_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('upload_statistics_pkey'))
    )
    op.create_index(op.f('ix_upload_statistics_upload_id'), 'upload_statistics', ['upload_id'], unique=False)
    op.create_index(op.f('ix_upload_statistics_id'), 'upload_statistics', ['id'], unique=False)
    op.create_table('upload_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False, comment='上传会话ID（UUID）'),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='原始文件名'),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=False, comment='文件总大小（字节）'),
    sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='MIME类型'),
    sa.Column('chunk_size', sa.INTEGER(), autoincrement=False, nullable=True, comment='分块大小（默认5MB）'),
    sa.Column('total_chunks', sa.INTEGER(), autoincrement=False, nullable=False, comment='总分块数'),
    sa.Column('uploaded_chunks', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='已上传的分块索引列表'),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='媒体标题'),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='媒体描述'),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='父文件夹ID'),
    sa.Column('tags', sa.VARCHAR(length=512), autoincrement=False, nullable=True, comment='标签'),
    sa.Column('temp_dir', sa.VARCHAR(length=512), autoincrement=False, nullable=False, comment='临时分块存储目录'),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否完成'),
    sa.Column('is_merged', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否已合并'),
    sa.Column('uploader_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='上传者ID'),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='完成后的媒体ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='最后更新时间'),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='过期时间'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('upload_sessions_media_id_fkey')),
    sa.ForeignKeyConstraint(['parent_id'], ['media.id'], name=op.f('upload_sessions_parent_id_fkey')),
    sa.ForeignKeyConstraint(['uploader_id'], ['admin_users.id'], name=op.f('upload_sessions_uploader_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('upload_sessions_pkey'))
    )
    op.create_index(op.f('ix_upload_sessions_upload_id'), 'upload_sessions', ['upload_id'], unique=True)
    op.create_index(op.f('ix_upload_sessions_id'), 'upload_sessions', ['id'], unique=False)
    op.create_table('email_configurations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('smtp_host', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('smtp_username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_use_tls', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('smtp_use_ssl', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('mailgun_api_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mailgun_base_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('from_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('from_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('email_configurations_pkey'))
    )
    op.create_table('email_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('html_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('text_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('email_templates_pkey')),
    sa.UniqueConstraint('slug', name=op.f('email_templates_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('sentry_config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dsn', sa.VARCHAR(length=500), autoincrement=False, nullable=False, comment='Sentry DSN'),
    sa.Column('environment', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='环境名称'),
    sa.Column('frontend_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='用户前端是否启用'),
    sa.Column('admin_frontend_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='管理前端是否启用'),
    sa.Column('traces_sample_rate', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='性能监控采样率'),
    sa.Column('replays_session_sample_rate', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='会话回放采样率'),
    sa.Column('replays_on_error_sample_rate', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='错误回放采样率'),
    sa.Column('ignore_errors', sa.TEXT(), autoincrement=False, nullable=True, comment='忽略的错误列表（JSON数组）'),
    sa.Column('allowed_urls', sa.TEXT(), autoincrement=False, nullable=True, comment='允许上报的URL列表（JSON数组）'),
    sa.Column('denied_urls', sa.TEXT(), autoincrement=False, nullable=True, comment='拒绝上报的URL列表（JSON数组）'),
    sa.Column('release_version', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='发布版本号'),
    sa.Column('debug_mode', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='调试模式'),
    sa.Column('attach_stacktrace', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='自动附加堆栈跟踪'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='配置说明'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='创建者管理员ID'),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='更新者管理员ID'),
    sa.PrimaryKeyConstraint('id', name=op.f('sentry_config_pkey'))
    )
    op.create_index(op.f('ix_sentry_config_id'), 'sentry_config', ['id'], unique=False)
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_subscription_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_created_at'), table_name='payments')
    op.drop_table('payments')
    # video_shares table removed - not part of payment system
    op.drop_index(op.f('ix_user_subscriptions_user_id'), table_name='user_subscriptions')
    op.drop_index(op.f('ix_user_subscriptions_status'), table_name='user_subscriptions')
    op.drop_index(op.f('ix_user_subscriptions_id'), table_name='user_subscriptions')
    op.drop_table('user_subscriptions')
    op.drop_index(op.f('ix_payment_methods_user_id'), table_name='payment_methods')
    op.drop_index(op.f('ix_payment_methods_id'), table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_index(op.f('ix_invoices_user_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_status'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_payment_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_invoice_number'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_subscription_plans_id'), table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_coupons_status'), table_name='coupons')
    op.drop_index(op.f('ix_coupons_id'), table_name='coupons')
    op.drop_index(op.f('ix_coupons_code'), table_name='coupons')
    op.drop_table('coupons')
    # ### end Alembic commands ###
