"""add_media_share_model

Revision ID: 0f8081e0e8d0
Revises: 888257c90568
Create Date: 2025-10-12 22:42:05.067404

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f8081e0e8d0'
down_revision: Union[str, None] = '888257c90568'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('media_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('share_code', sa.String(length=20), nullable=False, comment='分享码'),
    sa.Column('password', sa.String(length=100), nullable=True, comment='访问密码（加密后）'),
    sa.Column('allow_download', sa.Boolean(), nullable=True, comment='是否允许下载'),
    sa.Column('max_downloads', sa.Integer(), nullable=True, comment='最大下载次数（null表示无限制）'),
    sa.Column('download_count', sa.Integer(), nullable=True, comment='已下载次数'),
    sa.Column('max_views', sa.Integer(), nullable=True, comment='最大访问次数（null表示无限制）'),
    sa.Column('view_count', sa.Integer(), nullable=True, comment='已访问次数'),
    sa.Column('expires_at', sa.DateTime(), nullable=True, comment='过期时间（null表示永久有效）'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_by', sa.Integer(), nullable=False, comment='创建者ID'),
    sa.Column('note', sa.Text(), nullable=True, comment='备注说明'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['created_by'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_shares_id'), 'media_shares', ['id'], unique=False)
    op.create_index(op.f('ix_media_shares_is_active'), 'media_shares', ['is_active'], unique=False)
    op.create_index(op.f('ix_media_shares_media_id'), 'media_shares', ['media_id'], unique=False)
    op.create_index(op.f('ix_media_shares_share_code'), 'media_shares', ['share_code'], unique=True)
    op.drop_index(op.f('ix_upload_sessions_id'), table_name='upload_sessions')
    op.drop_index(op.f('ix_upload_sessions_upload_id'), table_name='upload_sessions')
    op.drop_table('upload_sessions')
    op.drop_index(op.f('ix_video_shares_id'), table_name='video_shares')
    op.drop_index(op.f('ix_video_shares_platform'), table_name='video_shares')
    op.drop_index(op.f('ix_video_shares_shared_at'), table_name='video_shares')
    op.drop_index(op.f('ix_video_shares_user_id'), table_name='video_shares')
    op.drop_index(op.f('ix_video_shares_video_id'), table_name='video_shares')
    op.drop_table('video_shares')
    op.alter_column('media', 'folder',
               existing_type=sa.VARCHAR(length=255),
               comment='文件夹/分类（旧字段，向后兼容）',
               existing_comment='文件夹/分类',
               existing_nullable=True)
    op.drop_index(op.f('ix_media_file_path'), table_name='media')
    op.create_unique_constraint(None, 'media', ['file_path'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'media', type_='unique')
    op.create_index(op.f('ix_media_file_path'), 'media', ['file_path'], unique=True)
    op.alter_column('media', 'folder',
               existing_type=sa.VARCHAR(length=255),
               comment='文件夹/分类',
               existing_comment='文件夹/分类（旧字段，向后兼容）',
               existing_nullable=True)
    op.create_table('video_shares',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('platform', postgresql.ENUM('WECHAT', 'WEIBO', 'QQ', 'QZONE', 'TWITTER', 'FACEBOOK', 'LINK', 'OTHER', name='shareplatform'), autoincrement=False, nullable=False),
    sa.Column('shared_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('video_shares_user_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('video_shares_video_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('video_shares_pkey'))
    )
    op.create_index(op.f('ix_video_shares_video_id'), 'video_shares', ['video_id'], unique=False)
    op.create_index(op.f('ix_video_shares_user_id'), 'video_shares', ['user_id'], unique=False)
    op.create_index(op.f('ix_video_shares_shared_at'), 'video_shares', ['shared_at'], unique=False)
    op.create_index(op.f('ix_video_shares_platform'), 'video_shares', ['platform'], unique=False)
    op.create_index(op.f('ix_video_shares_id'), 'video_shares', ['id'], unique=False)
    op.create_table('upload_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False, comment='上传会话ID（UUID）'),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='原始文件名'),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=False, comment='文件总大小（字节）'),
    sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='MIME类型'),
    sa.Column('chunk_size', sa.INTEGER(), server_default=sa.text('5242880'), autoincrement=False, nullable=True, comment='分块大小（默认5MB）'),
    sa.Column('total_chunks', sa.INTEGER(), autoincrement=False, nullable=False, comment='总分块数'),
    sa.Column('uploaded_chunks', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), autoincrement=False, nullable=True, comment='已上传的分块索引列表'),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='媒体标题'),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='媒体描述'),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='父文件夹ID'),
    sa.Column('tags', sa.VARCHAR(length=512), autoincrement=False, nullable=True, comment='标签'),
    sa.Column('temp_dir', sa.VARCHAR(length=512), autoincrement=False, nullable=False, comment='临时分块存储目录'),
    sa.Column('is_completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True, comment='是否完成'),
    sa.Column('is_merged', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True, comment='是否已合并'),
    sa.Column('uploader_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='上传者ID'),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='完成后的媒体ID'),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='最后更新时间'),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='过期时间'),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name=op.f('upload_sessions_media_id_fkey')),
    sa.ForeignKeyConstraint(['parent_id'], ['media.id'], name=op.f('upload_sessions_parent_id_fkey')),
    sa.ForeignKeyConstraint(['uploader_id'], ['admin_users.id'], name=op.f('upload_sessions_uploader_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('upload_sessions_pkey'))
    )
    op.create_index(op.f('ix_upload_sessions_upload_id'), 'upload_sessions', ['upload_id'], unique=True)
    op.create_index(op.f('ix_upload_sessions_id'), 'upload_sessions', ['id'], unique=False)
    op.drop_index(op.f('ix_media_shares_share_code'), table_name='media_shares')
    op.drop_index(op.f('ix_media_shares_media_id'), table_name='media_shares')
    op.drop_index(op.f('ix_media_shares_is_active'), table_name='media_shares')
    op.drop_index(op.f('ix_media_shares_id'), table_name='media_shares')
    op.drop_table('media_shares')
    # ### end Alembic commands ###
